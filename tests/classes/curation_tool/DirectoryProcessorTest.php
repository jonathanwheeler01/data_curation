<?php

require_once dirname(__FILE__) . '/../../../classes/curation_tool/DirectoryProcessor.php';

/**
 * Test class for DirectoryProcessor.
 * Generated by PHPUnit on 2012-03-02 at 20:21:40.
 */
class DirectoryProcessorTest extends PHPUnit_Framework_TestCase {

  /**
   * @var DirectoryProcessor
   */
  protected $object;
  
  protected function makeFile($filename, $contents) {
    $handle = fopen($filename, 'w');
    fwrite($handle, $contents);
    fclose($handle);
  }

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed. I found the mock directory 
   * structure extremely cumbersome, so i just create and tear down one.
   */
  protected function setUp() {
    $this->object = new DirectoryProcessor;
    
    // Create the directory structure
    $directory = 'testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_1';
    mkdir($directory, 0, TRUE);
    $directory = 'testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_2';
    mkdir($directory, 0, TRUE);
    $directory = 'testproj'.DIRECTORY_SEPARATOR.'datadir2';
    mkdir($directory, 0, TRUE);
           
    // add files
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'file1.txt', 'this is file 1');
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'file1.png', 'this is file 2');
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'file1.csv', 'this is file 3');
    
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_1'.DIRECTORY_SEPARATOR.'file1_1_1.txt', 'this is file 1 1 1');
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_1'.DIRECTORY_SEPARATOR.'file1_1_2.png', 'this is file 1 1 2');
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_1'.DIRECTORY_SEPARATOR.'file1_1_3.xsl', 'this is file 1 1 3');
    
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir1'.DIRECTORY_SEPARATOR.'datadir1_2'.DIRECTORY_SEPARATOR.'file1_2_1.txt', 'this is file 1 2 1');
    
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir2'.DIRECTORY_SEPARATOR.'file2_1.txt', 'this is file 2 1');
    $this->makeFile('testproj'.DIRECTORY_SEPARATOR.'datadir2'.DIRECTORY_SEPARATOR.'file2_2.txt', 'this is file 2 2');
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    // remove the directory structure.
    exec('rmdir /s /q testproj');
  }

  /**
   * @todo Implement testSet_root().
   */
  public function testSet_root() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

//  /**
//   * @todo Implement testGet_root().
//   */
//  public function testGet_root() {
//    // Remove the following lines when you implement this test.
//    $this->markTestIncomplete(
//            'This test has not been implemented yet.'
//    );
//  }
//
//  /**
//   * @todo Implement testProcess_dataset().
//   */
//  public function testProcess_dataset() {
//    // Remove the following lines when you implement this test.
//    $this->markTestIncomplete(
//            'This test has not been implemented yet.'
//    );
//  }

}

?>
