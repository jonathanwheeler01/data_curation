<?php

require_once dirname(__FILE__) . '/../../../../curation_tool.inc';

/**
 * Test class for XFDU.
 * Generated by PHPUnit on 2011-11-04 at 17:35:47.
 */
class XFDUTest extends PHPUnit_Framework_TestCase {

  /**
   * @var XFDU
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new XFDU;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {

  }

  /**
   * 
   */
  public function testID() {
    $this->assertFalse($this->object->isset_id());

    $id = 'test';
    $this->object->set_id($id);
    $this->assertTrue($this->object->isset_id());
    $this->assertEquals($id, $this->object->get_id());
  }

  /**
   * 
   */
  public function testObjID() {
    $this->assertFalse($this->object->isset_objID());

    $objID = 'test';
    $this->object->set_objID($objID);
    $this->assertTrue($this->object->isset_objID());
    $this->assertEquals($objID , $this->object->get_objID());
  }

  /**
   * 
   */
  public function testTextInfo() {
    $this->assertFalse($this->object->isset_textInfo());

    $textInfo = 'test';
    $this->object->set_textInfo($textInfo);
    $this->assertTrue($this->object->isset_textInfo());
    $this->assertEquals($textInfo, $this->object->get_textInfo());
  }

  /**
   * 
   */
  public function testVersion() {
    $this->assertTrue($this->object->isset_version());
    $this->assertEquals(1.0, $this->object->get_version());

    $version = 2.0;
    $this->object->set_version($version);
    $this->assertEquals($version, $this->object->get_version());
  }

  /**
   * 
   */
  public function testPackageHeader() {
    $this->assertFalse($this->object->isset_packageHeader());

    $packageHeader = new PackageHeader();
    $this->object->set_packageHeader($packageHeader);
    $this->assertTrue($this->object->isset_packageHeader());
    $this->assertEquals('PackageHeader', get_class($this->object->get_packageHeader()));
  }

  public function testInformationPackageMap() {
    $this->assertFalse($this->object->isset_informationPackageMap());

    $informationPackageMap = new InformationPackageMap();
    $this->object->set_informationPackageMap($informationPackageMap);
    $this->assertTrue($this->object->isset_informationPackageMap());
    $this->assertEquals('InformationPackageMap', get_class($this->object->get_informationPackageMap()));
  }
}

?>
