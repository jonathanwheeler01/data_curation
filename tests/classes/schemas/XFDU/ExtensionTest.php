<?php

require_once dirname(__FILE__) . '/../../../../classes/schemas/XFDU/Extension.php';

/**
 * Test class for Extension.
 * Generated by PHPUnit on 2011-11-21 at 05:05:52.
 */
class ExtensionTest extends PHPUnit_Framework_TestCase {

  /**
   * @var Extension
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new Extension;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }

  /**
   * 
   */
  public function testAny() {
    $this->assertFalse($this->object->isset_any());
    
    $dom = new DOMDocument('1.0', 'UTF-8');
    $any = $dom->createElement('stuff');
    $this->object->set_any($any);
    
    $this->assertTrue($this->object->isset_any());
    $this->assertEqualXMLStructure($any, $dom->importNode($this->object->get_any()));
  }
  
  /**
   * @expectedException InvalidArgumentException
   */
  public function testAnyNotObject() {
    $this->object->set_any('not an object');
  }
  
  /**
   * @expectedException InvalidArgumentException
   */
  public function testAnyInvalidObject() {
    $this->object->set_any(new stdClass());
  }

  /**
   *
   */
  public function testGet_as_DOM() {
    $dom = new DOMDocument('1.0', 'UTF-8');
    
    $uri = 'test';
    $prefix = 'pre';
    $location = 'example.com/test.xsd';
    $any = $dom->createElement($prefix.':stuff');
    $any->setAttribute('xmlns:'.$prefix, $uri);
    
    $expectedElement = $dom->createElement('extension');
    $expectedElement->appendChild($any);
    
    $this->object->set_any($any);
    
    
    $this->assertEqualXMLStructure($expectedElement, $dom->importNode($this->object->get_as_DOM(), TRUE), TRUE);
  }
  
  /**
   * 
   */
  public function testGet_as_DOMWithNodeList() {$dom = new DOMDocument('1.0', 'UTF-8');
    
    $expected = $dom->createElement('extension');
    $expected->appendChild($child1 = $dom->createElement('child1'));
    $expected->appendChild($child2 = $dom->createElement('child2'));
    $expected->appendChild($child3 = $dom->createElement('child3'));
    $dom->appendChild($expected);
    
    // Gets a node list from the document
    $xpath = new DOMXPath($dom);
    $query = '/extension/*';
    $nodeList = $xpath->query($query);
    
    print "listlength = ".$nodeList->length;
    
    $this->object->set_any($nodeList);
    
    $this->assertEqualXMLStructure($expected, $this->object->get_as_DOM());
  }
  
  /**
   * @expectedException RequiredElementException
   * 
   */
  public function testEmptyXMLData() {
    $this->object->get_as_DOM();
  }
}

?>
