<?php

require_once dirname(__FILE__) . '/../../../../curation_tool.inc';

/**
 * Test class for MetadataObject.
 * Generated by PHPUnit on 2011-11-07 at 02:09:38.
 */
class MetadataObjectTest extends PHPUnit_Framework_TestCase {

  /**
   * @var MetadataObject
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new MetadataObject;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }
  
  /**
   * 
   */
  public function testCategory() {
    $this->assertFalse($this->object->isset_category());
    
    $value = 'test';
    $this->object->set_category($value);
    $this->assertTrue($this->object->isset_category());
    $this->assertEquals($value, $this->object->get_category());
  }
  
  /**
   * 
   */
  public function testOtherCategory() {
    $this->assertFalse($this->object->isset_otherCategory());
    
    $value = 'test';
    $this->object->set_otherCategory($value);
    $this->assertTrue($this->object->isset_otherCategory());
    $this->assertEquals($value, $this->object->get_otherCategory());
  }
  
  /**
   * 
   */
  public function testClassification() {
    $this->assertFalse($this->object->isset_classification());
    
    $value = 'test';
    $this->object->set_classification($value);
    $this->assertTrue($this->object->isset_classification());
    $this->assertEquals($value, $this->object->get_classification());
  }
  
  /**
   * 
   */
  public function testOtherClass() {
    $this->assertFalse($this->object->isset_otherClass());
    
    $value = 'test';
    $this->object->set_otherClass($value);
    $this->assertTrue($this->object->isset_otherClass());
    $this->assertEquals($value, $this->object->get_otherClass());
  }
  
  /**
   * 
   */
  public function testDataObjectPointer() {
    $this->assertFalse($this->object->isset_dataObjectPointer());
    
    $value = new DataObjectPointer();
    $this->object->set_dataObjectPointer($value);
    $this->assertTrue($this->object->isset_dataObjectPointer());
    $this->assertEquals(get_class($value), get_class($this->object->get_dataObjectPointer()));
  }
  
  
  /**
   * 
   */
  public function testID() {
    $this->assertFalse($this->object->isset_id());
    
    $value = 'test';
    $this->object->set_id($value);
    $this->assertTrue($this->object->isset_id());
    $this->assertEquals($value, $this->object->get_id());
  }
  
  /**
   * @expectedException InvalidIDTokenException
   */
  public function testInvalidID() {
    $this->object->set_id('0Invalid');
  }
  
  /**
   * 
   */
  public function testMetadataWrap() {
    $this->assertFalse($this->object->isset_metadataWrap());
    
    $value = new MetadataWrap();
    $this->object->set_metadataWrap($value);
    $this->assertTrue($this->object->isset_metadataWrap());
    $this->assertEquals(get_class($value), get_class($this->object->get_metadataWrap()));
  }

}

?>
