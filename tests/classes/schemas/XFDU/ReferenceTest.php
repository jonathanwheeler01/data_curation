<?php

require_once dirname(__FILE__) . '/../../../../curation_tool.inc';


/**
 * Test class for Reference.
 * Generated by PHPUnit on 2011-11-05 at 03:07:17.
 */
class ReferenceTest extends PHPUnit_Framework_TestCase {

  /**
   * @var Reference
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new Reference;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }
  
  /**
   * 
   */
  public function testHref() {
    $this->assertFalse($this->object->isset_href());
    
    $value = 'test';
    $this->object->set_href($value);
    $this->assertTrue($this->object->isset_href());
    $this->assertEquals($value, $this->object->get_href());
  }
  
  /**
   * 
   */
  public function testid() {
    $this->assertFalse($this->object->isset_id());
    
    $value = 'test';
    $this->object->set_id($value);
    $this->assertTrue($this->object->isset_id());
    $this->assertEquals($value, $this->object->get_id());
  }
  
  /**
   * @expectedException InvalidIDTokenException
   */
  public function testBadID() {
    $this->object->set_id('0bad');
  }
  
  /**
   * 
   */
  public function testLocator() {
    $this->assertFalse($this->object->isset_locator());
    
    $value = 'test';
    $this->object->set_locator($value);
    $this->assertTrue($this->object->isset_locator());
    $this->assertEquals($value, $this->object->get_locator());
  }
  
  /**
   * 
   */
  public function testLocatorType() {
    $this->assertFalse($this->object->isset_locatorType());
    
    $value = 'URL';
    $this->object->set_locatorType($value);
    $this->assertTrue($this->object->isset_locatorType());
    $this->assertEquals($value, $this->object->get_locatorType());
  }
  
  /**
   * 
   */
  public function testOtherLocatorType() {
    $this->assertFalse($this->object->isset_otherLocatorType());
    
    $value = 'test';
    $this->object->set_otherLocatorType($value);
    $this->assertTrue($this->object->isset_otherLocatorType());
    $this->assertEquals($value, $this->object->get_otherLocatorType());
  }
  
  /**
   * 
   */
  public function testTextInfo() {
    $this->assertFalse($this->object->isset_textInfo());
    
    $value = 'test';
    $this->object->set_textInfo($value);
    $this->assertTrue($this->object->isset_textInfo());
    $this->assertEquals($value, $this->object->get_textInfo());
  }
}

?>
