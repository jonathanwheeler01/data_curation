<?php

require_once dirname(__FILE__) . '/../../../../classes/packages/XFDU/XFDUBuilder.php';

/**
 * Test class for XFDUBuilder.
 * Generated by PHPUnit on 2012-02-15 at 23:11:17.
 */
class XFDUBuilderTest extends PHPUnit_Framework_TestCase {

  /**
   * @var XFDUBuilder
   */
  protected $object;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp() {
    $this->object = new XFDUBuilder;
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown() {
    
  }

  /**
   * @todo Implement testBuild_XFDU().
   */
  public function testBuild_XFDU() {
     $packageHeaderID = 'packageHeader';
     $impID = 'packageMap';
     
     $dom = new DOMDocument('1.0', 'UTF-8');
     
    // Expected specificaiton Version 
     $expectedSpecificationVersion = $dom->createElement('specificationVersion');
     $expectedSpecificationVersion->appendChild($dom->createTextNode('1.0'));
     
     // Expected Volume Info 
     $expectedVolumeInfo = $dom->createElement('volumeInfo');
     $expectedVolumeInfo->appendChild($expectedSpecificationVersion);
     
     // Expected package header
     $expectedPackageHeader = $dom->createElement('packageHeader');
     $expectedPackageHeader->appendChild($expectedVolumeInfo);
     
     // Expected contentUnit
     $expectedContentUnit = $dom->createElement('xfdu:contentUnit');
     
     //Expected informationPackageMap
     $expectedInformationPackageMap = $dom->createElement('informationPackageMap');
     $expectedInformationPackageMap->appendChild($expectedContentUnit);

    // Expected Root xfdu element
    $expectedElement = $dom->createElement('xfdu:XFDU');
    $expectedElement->setAttribute('xmlns:xfdu', 'urn:ccsds:schema:xfdu:1');
    $expectedElement->setAttribute('xmlns:xsi', 'http://www.w3.org/2001/XMLSchema-instance');
    $expectedElement->setAttribute('xsi:schemaLocation', 'urn:ccsds:schema:xfdu:1 http://sindbad.gsfc.nasa.gov/xfdu/xsd-src/xfdu.xsd');
    $expectedElement->appendChild($expectedPackageHeader);
    $expectedElement->appendChild($expectedInformationPackageMap);
    
    
    // Actual xfdu.
    
    $volumeInfo = $this->object->build_volumeInfo();
    $packageHeader = $this->object->build_packageHeader($packageHeaderID, $volumeInfo);
    
    $informationPackageMap = new InformationPackageMap();
    $informationPackageMap->add_contentUnit(new ContentUnit());
    $informationPackageMap->set_id($impID);
    $xfdu = $this->object->build_XFDU($packageHeader, $informationPackageMap);
    
    $this->assertEqualXMLStructure($expectedElement, $xfdu->get_as_DOM());
  }

  /**
   * @todo Implement testBuild_packageHeader().
   */
  public function testBuild_packageHeader() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @todo Implement testBuild_InformationPackageMap().
   */
  public function testBuild_InformationPackageMap() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @todo Implement testBuild_volumeInfo().
   */
  public function testBuild_volumeInfo() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @todo Implement testBuild_SequenceInfo().
   */
  public function testBuild_SequenceInfo() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @todo Implement testBuild_environmentInfo().
   */
  public function testBuild_environmentInfo() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @todo Implement testBuild_XMLData().
   */
  public function testBuild_XMLData() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

}

?>
